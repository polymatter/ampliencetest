{"version":3,"sources":["style.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBox","styled","input","headers","App","useState","value","setValue","sdk","setSdk","useEffect","init","then","hasLoadedSdk","field","getValue","className","type","onClick","search","fetch","method","response","json","data","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAEaA,E,MAAYC,EAAOC,MAAV,8C,OCkBhBC,EAAU,CACd,cAAiB,wDACjB,eAAgB,mBAChB,qBAAsB,uCACtB,0BAA2B,MAC3B,aAAc,0CA2CDC,MAxCf,WACE,MAA0BC,mBAAS,SAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,qBAAtB,mBAAOG,EAAP,KAAYC,EAAZ,KAEAC,qBAAU,WACRC,cAAqBC,KAAKH,KACzB,IAEHC,qBAAU,WACHG,EAAaL,IAGlBA,EAAIM,MAAMC,aACT,CAACP,IAEJ,IAAMK,EAAe,SAACL,GACpB,QAASA,GAYX,OAAKK,EAAaL,GAIhB,sBAAKQ,UAAU,MAAf,0BACgBV,EACd,cAACN,EAAD,CAAWiB,KAAK,OAAOD,UAAU,UACjC,wBAAQE,QAhBa,WA/Bf,IAACC,EAgCTC,OAhCSD,EAgCC,KAhCF,oEAAiFA,IAgCxE,CAAEE,OAAQ,MAAOlB,YAC/BS,MAAK,SAAAU,GAAQ,OAAIA,EAASC,UAC1BX,MAAK,SAAAY,GACJC,QAAQC,IAAIF,GACZjB,EAAS,gBAWX,kBANK,qBAAKS,UAAU,MAAf,0BC3CIW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.75fd4d65.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SearchBox = styled.input`\r\n    width: 100%;\r\n`;","import './App.css';\nimport { init } from 'dc-extensions-sdk';\nimport type { ContentFieldExtension } from 'dc-extensions-sdk';\nimport { useState, useEffect } from 'react';\nimport { SearchBox } from './style';\n\ntype FieldModel = string;\ninterface Parameters {\n  instance: {};\n  installation: {\n    configParam: string;\n  }\n}\n\ntype AmplienceSdk = ContentFieldExtension<FieldModel, Parameters>;\n\nconst api = (search: string) => `https://dev.poq.io/clients/demo/search/predictive?keyword=${search}`;\n// const api = (search: string) => `https://dev.poq.io/clients/demo/search`; //bala said to use this one.\n\n// Note for CORS the response needs a \"Access-Control-Allow-Origin\" set,\nconst headers = {\n  \"Authorization\": \"Bearer anonymous+1fcac1b5-a3c6-4a62-80c1-62a478186863\",\n  \"Content-Type\": \"application/json\",\n  \"poq-app-identifier\": \"ca315772-4803-4b48-ae99-5683133770e6\",\n  \"Poq-Currency-Identifier\": \"GBP\",\n  \"User-Agent\": \"com.poq.poqdemoapp-uat/20.0.1 iOS/15.0\",\n}\n\nfunction App() {\n  const [value, setValue] = useState(\"hello\");\n  const [sdk, setSdk] = useState<AmplienceSdk>();\n\n  useEffect(() => {\n    init<AmplienceSdk>().then(setSdk);\n  }, []);\n\n  useEffect(() => {\n    if (!hasLoadedSdk(sdk))\n      return;\n\n    sdk.field.getValue();\n  }, [sdk]);\n\n  const hasLoadedSdk = (sdk: AmplienceSdk | undefined): sdk is AmplienceSdk => {\n    return !!sdk;\n  }\n\n  const fetchSuggestions = () => {\n    fetch(api('dr'), { method: 'GET', headers })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        setValue(\"elephant\")\n      });\n  }\n\n  if (!hasLoadedSdk(sdk))\n    return <div className=\"App\">Loading ...</div>\n\n  return (\n    <div className=\"App\">\n      Value is ... {value}\n      <SearchBox type=\"text\" className=\"input\" />\n      <button onClick={fetchSuggestions}>+</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}