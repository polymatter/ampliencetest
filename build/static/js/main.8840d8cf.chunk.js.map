{"version":3,"sources":["style.ts","ProductPicker.tsx","CategoryPicker.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppWrap","styled","div","Title","Text","SearchBoxWrap","SearchBox","input","SearchButton","button","ListTable","table","ListTableBody","tbody","ListTableRow","tr","ListTableData","td","props","selected","ProductPicker","sdk","useState","searchWord","setSearchWord","results","setResults","value","setValue","useEffect","field","getValue","then","displayLabelProperty","params","instance","endpoint","selectRow","result","isSelected","isSearching","className","placeholder","type","onChange","event","target","onClick","headers","url","searchUrl","replace","fetch","method","response","json","data","listProperty","frame","setHeight","console","error","disabled","length","map","CategoryPicker","App","setSdk","init","pickerType","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8840d8cf.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AppWrap = styled.div`\r\n    width: 25%;\r\n    padding: 16px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 0 4px rgb(0 0 0 / 5%);\r\n    background: #fff;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n    padding-bottom: 10px;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    padding-bottom: 10px;\r\n`;\r\n\r\nexport const SearchBoxWrap = styled.div`\r\n    padding-bottom: 10px;\r\n`;\r\n\r\nexport const SearchBox = styled.input`\r\n    width: calc(100% - 3.3em);\r\n    padding: 0.5em 0.8em 0.5em 2.5em;\r\n    border: 1px solid #ced4da;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    background: #fff;\r\n    line-height: 1.5;\r\n    color: #000;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n\r\n    -webkit-writing-mode: horizontal-tb !important;\r\n    text-rendering: auto;\r\n    letter-spacing: normal;\r\n    word-spacing: normal;\r\n    text-transform: none;\r\n    text-indent: 0px;\r\n    text-shadow: none;\r\n    display: inline-block;\r\n    text-align: start;\r\n    appearance: auto;\r\n    -webkit-rtl-ordering: logical;\r\n    cursor: text;\r\n\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n    width: 100%;\r\n    padding-bottom: 10px;\r\n    display: inline-block;\r\n    position: relative;\r\n    padding: 10px 32px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    background: rgb(97,60,122);\r\n    font: inherit;\r\n    text-align: center;\r\n    white-space: no-wrap;\r\n    user-select: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n    -webkit-appearance: button;\r\n`;\r\n\r\nexport const ListTable = styled.table`\r\n    display: table;\r\n    text-indent: initial;\r\n    border-spacing: 2px;\r\n    width: 100%;\r\n    border: none;\r\n    padding-bottom: 10px;\r\n`;\r\n\r\nexport const ListTableBody = styled.tbody`\r\n    display: table-row-group;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const ListTableRow = styled.tr`\r\n    display: table-row;\r\n    outline: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const ListTableData = styled.td<{ selected?: boolean }>`\r\n    border-bottom: 5px solid #efefef;\r\n    padding: 8px 16px;\r\n    text-align: left;\r\n    background: ${props => props.selected ? '#efefef' : 'white'}\r\n`;","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { AppWrap, SearchBox, Title, Text, SearchButton, SearchBoxWrap, ListTable, ListTableBody, ListTableRow, ListTableData } from './style';\r\n\r\nimport type { AmplienceSdk } from './App';\r\n\r\ntype SearchResult = Record<string, string>\r\n\r\nexport const ProductPicker = ({ sdk }: { sdk: AmplienceSdk }) => {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [results, setResults] = useState([] as SearchResult[]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    sdk.field.getValue().then(setValue);\r\n  }, [])\r\n\r\n  const searchWordChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const searchWord = event.target.value;\r\n    setSearchWord(searchWord);\r\n  }\r\n\r\n  const fetchSuggestions = () => {\r\n    const headers = sdk.params.instance.headers;\r\n\r\n    const url = sdk.params.instance.endpoint.searchUrl?.replace('${search}', searchWord);\r\n    if (!url) {\r\n      console.error(\"No searchUrl specified\")\r\n      return;\r\n    }\r\n\r\n    fetch(url, { method: 'GET', headers })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const listProperty = sdk.params.instance.endpoint.listProperty;\r\n\r\n        setResults(listProperty ? data[listProperty] : data);\r\n        sdk.frame.setHeight();\r\n      });\r\n  }\r\n\r\n  const displayLabelProperty = sdk.params.instance.endpoint.displayLabelProperty;\r\n\r\n  const selectRow = (result: SearchResult) => {\r\n    return () => {\r\n      setValue(result[displayLabelProperty]);\r\n    }\r\n  }\r\n\r\n  const isSelected = (result: SearchResult) => {\r\n    return value === result[displayLabelProperty]\r\n  }\r\n\r\n  const isSearching = (value !== searchWord)\r\n\r\n  return (\r\n    <AppWrap className=\"App\">\r\n      <Title>Product</Title>\r\n      { value && \r\n        <Text>Selected value: {value}</Text>\r\n      }\r\n      <Text>Enter a product name below, then click Search to find the right product</Text>\r\n      <SearchBoxWrap>\r\n        <SearchBox placeholder=\"Product name eg. Dress\" type=\"text\" className=\"input\" onChange={searchWordChangeHandler} value={searchWord} />\r\n      </SearchBoxWrap>\r\n      <SearchButton onClick={fetchSuggestions} disabled={!isSearching}>Search</SearchButton>\r\n      {\r\n        isSearching && results.length > 0 &&\r\n        <ListTable>\r\n          <ListTableBody>\r\n            {\r\n              results.map(result => {\r\n                return <ListTableRow>\r\n                  <ListTableData onClick={selectRow(result)} selected={isSelected(result)}>{result[displayLabelProperty]}</ListTableData>\r\n                </ListTableRow>\r\n              })\r\n            }\r\n          </ListTableBody>\r\n        </ListTable>\r\n      }\r\n    </AppWrap>\r\n  );\r\n}","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { AppWrap, SearchBox, Title, Text, SearchButton, SearchBoxWrap, ListTable, ListTableBody, ListTableRow, ListTableData } from './style';\r\n\r\nimport type { AmplienceSdk } from './App';\r\n\r\ntype SearchResult = Record<string, string>\r\n\r\nexport const CategoryPicker = ({ sdk }: { sdk: AmplienceSdk }) => {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [results, setResults] = useState([] as SearchResult[]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    sdk.field.getValue().then(setValue);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    sdk.field.setValue(value);\r\n  }, [value])\r\n\r\n  const searchWordChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const searchWord = event.target.value;\r\n    setSearchWord(searchWord);\r\n  }\r\n\r\n  const fetchSuggestions = () => {\r\n    const headers = sdk.params.instance.headers;\r\n\r\n    const url = sdk.params.instance.endpoint.searchUrl?.replace('${search}', searchWord);\r\n    if (!url) {\r\n      console.error(\"No searchUrl specified\")\r\n      return;\r\n    }\r\n\r\n    fetch(url, { method: 'GET', headers })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const listProperty = sdk.params.instance.endpoint.listProperty;\r\n\r\n        setResults(listProperty ? data[listProperty] : data);\r\n        sdk.frame.setHeight();\r\n      });\r\n  }\r\n\r\n  const displayLabelProperty = sdk.params.instance.endpoint.displayLabelProperty;\r\n\r\n  const selectRow = (result: SearchResult) => {\r\n    return () => {\r\n      setValue(result[displayLabelProperty]);\r\n    }\r\n  }\r\n\r\n  const isSelected = (result: SearchResult) => {\r\n    return value === result[displayLabelProperty]\r\n  }\r\n\r\n  const isSearching = (value !== searchWord)\r\n\r\n  return (\r\n    <AppWrap className=\"App\">\r\n      <Title>Category</Title>\r\n      { value && \r\n        <Text>Selected value: {value}</Text>\r\n      }\r\n      <Text>Select from the categories below</Text>\r\n      <SearchBoxWrap>\r\n        <SearchBox placeholder=\"Product name eg. Dress\" type=\"text\" className=\"input\" onChange={searchWordChangeHandler} value={searchWord} />\r\n      </SearchBoxWrap>\r\n      <SearchButton onClick={fetchSuggestions} disabled={!isSearching}>Search</SearchButton>\r\n      {\r\n        isSearching && results.length > 0 &&\r\n        <ListTable>\r\n          <ListTableBody>\r\n            {\r\n              results.map(result => {\r\n                return <ListTableRow>\r\n                  <ListTableData onClick={selectRow(result)} selected={isSelected(result)}>{result[displayLabelProperty]}</ListTableData>\r\n                </ListTableRow>\r\n              })\r\n            }\r\n          </ListTableBody>\r\n        </ListTable>\r\n      }\r\n    </AppWrap>\r\n  );\r\n}","import './App.css';\nimport { init } from 'dc-extensions-sdk';\nimport type { ContentFieldExtension } from 'dc-extensions-sdk';\nimport { useState, useEffect } from 'react';\nimport { ProductPicker } from './ProductPicker';\nimport {CategoryPicker} from './CategoryPicker';\n\nexport type FieldModel = string;\nexport interface Parameters {\n  instance: {\n    headers: {\n      \"poq-app-identifier\": string,\n      \"poq-currency-identifier\": string,\n    }\n    endpoint: {\n      searchUrl: string,\n      listProperty: string,\n      imageProperty: string,\n      displayLabelProperty: string,\n    }\n    pickerType: \"product\" | \"category\"\n  };\n  installation: {\n    configParam: string;\n  }\n}\n\nexport type AmplienceSdk = ContentFieldExtension<FieldModel, Parameters>;\n\nfunction App() {\n  const [sdk, setSdk] = useState<AmplienceSdk>();\n\n  useEffect(() => {\n    init<AmplienceSdk>().then(setSdk);\n  }, []);\n\n  if (!sdk) {\n    return <div className=\"App\">Loading ...</div>\n  }\n\n  const pickerType = sdk.params.instance.pickerType;\n  if (pickerType.toLowerCase() == \"category\") {\n    return <CategoryPicker sdk={sdk} />\n  }\n\n  return <ProductPicker sdk={sdk} />\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}