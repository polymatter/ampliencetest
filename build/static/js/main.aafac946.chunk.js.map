{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["deviceRatios","ios","index","platform","ratio","ipad","android","App","useEffect","init","then","setSdk","useState","sdk","form","get","slot","setBanners","content","banners","window","innerHeight","windowHeight","setHeight","useWindowResize","changed","getBannerImage","banner","imageData","defaultHost","endpoint","name","deviceWidth","availableHeight","map","isFeatured","src","alt","id","style","width","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA6CMA,EAA+B,CACnCC,IAAK,CACHC,MAAO,EACPC,SAAU,MACVC,MAAO,IAAM,KAEfC,KAAM,CACJH,MAAO,EACPC,SAAU,MACVC,MAAO,KAETE,QAAS,CACPJ,MAAO,EACPC,SAAU,UACVC,MAAO,IAAM,MAIF,SAASG,IAGtBC,qBAAU,WACRC,cAAOC,KAAKC,KACX,IAEH,MAAsBC,qBAAtB,mBAAOC,EAAP,KAAYF,EAAZ,KAEAH,qBAAU,WACHK,GAELA,EAAIC,KAAKC,MAAqBL,MAAK,SAAAM,GACjCC,EAAWD,EAAKE,QAAQC,cAEzB,CAACN,IAEJ,MAA8BD,qBAA9B,mBAAOO,EAAP,KAAgBF,EAAhB,KAEA,EAAkCL,mBAASQ,OAAOC,aAAlD,mBAAOC,EAAP,KAAqBC,EAArB,KAKA,GAJAC,aAAgB,WACdD,EAAUH,OAAOC,iBAGdR,IAAQM,EACX,OAAO,6CAGTN,EAAIC,KAAKW,SAAQ,SAACT,GAChBC,EAAWD,EAAKE,QAAQC,YAG1B,IAAMO,EAAiB,SAACC,GACtB,IAAMC,EAAYD,EAAO,gBAEzB,MAAM,WAAN,OAAkBC,EAAUC,YAA5B,cAA6CD,EAAUE,SAAvD,YAAmEF,EAAUG,OAIzEC,EAAc,IADFhC,EAAY,IAAtBI,MAMF6B,EAAkBX,EAAe,GAQvC,OAZqB,IAKFW,GACTA,EANW,IAOP,IACF,GAIL,8BACJd,EAAQe,KAAI,SAACP,EAAQzB,EAAOiB,GAC3B,OAAO,qCACQ,GAATjB,GAAciB,EAAQjB,EAAM,GAAGiC,YAAc,uBAC/C,qBACAC,IAAKV,EAAeC,GACpBU,IAAKV,EAAO,gBAAgBW,GAC5BC,MAAO,CACLC,MAAOb,EAAOQ,WAAaH,EAAcA,EAAc,EACvDS,QAAS,aC1HrB,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7C,EAAD,MAEF8C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aafac946.chunk.js","sourcesContent":["import { init, VisualizationSDK } from 'dc-visualization-sdk';\r\nimport { useEffect, useState } from 'react';\r\nimport { useWindowResize } from 'beautiful-react-hooks';\r\n\r\ninterface AmplienceBanner {\r\n  '_meta': {\r\n    name: string,\r\n    schema: string,\r\n    deliveryId: string\r\n  },\r\n  'banner-image': {\r\n    '_meta': {\r\n      schema: string\r\n    },\r\n    id: string,\r\n    name: string,\r\n    endpoint: string,\r\n    defaultHost: string\r\n  },\r\n  isFeatured: boolean,\r\n  'banner-title': string,\r\n  width: number,\r\n  height: number,\r\n  actionType: string,\r\n  actionParameter: string,\r\n  paddingTop: number,\r\n  paddingBottom: number,\r\n  paddingLeft: number,\r\n  paddingRight: number\r\n}\r\n\r\ninterface AmplienceSlot {\r\n  content: {\r\n    banners: AmplienceBanner[]\r\n    '_meta': {\r\n      name: string,\r\n      schema: string,\r\n      deliveryId: string\r\n    }\r\n  }\r\n}\r\n\r\ntype AmplienceBanners = AmplienceBanner[];\r\ntype deviceRatioMap = Record<string, { index: number, platform: string, ratio: number }>\r\n\r\nconst deviceRatios: deviceRatioMap = {\r\n  ios: {\r\n    index: 0,\r\n    platform: 'ios',\r\n    ratio: 375 / 812\r\n  },\r\n  ipad: {\r\n    index: 1,\r\n    platform: 'ios',\r\n    ratio: 834 / 1112\r\n  },\r\n  android: {\r\n    index: 2,\r\n    platform: 'android',\r\n    ratio: 360 / 740\r\n  }\r\n}\r\n\r\nexport default function App() {\r\n  const deviceType: keyof deviceRatioMap = 'ios'\r\n\r\n  useEffect(() => {\r\n    init().then(setSdk);\r\n  }, [])\r\n\r\n  const [sdk, setSdk] = useState<VisualizationSDK>();\r\n\r\n  useEffect(() => {\r\n    if (!sdk) return;\r\n\r\n    sdk.form.get<AmplienceSlot>().then(slot => {\r\n      setBanners(slot.content.banners);\r\n    })\r\n  }, [sdk])\r\n\r\n  const [banners, setBanners] = useState<AmplienceBanners>();\r\n\r\n  const [windowHeight, setHeight] = useState(window.innerHeight)\r\n  useWindowResize(() => {\r\n    setHeight(window.innerHeight);\r\n  })\r\n\r\n  if (!sdk || !banners) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  sdk.form.changed((slot: AmplienceSlot) => {\r\n    setBanners(slot.content.banners);\r\n  });\r\n\r\n  const getBannerImage = (banner: AmplienceBanner) => {\r\n    const imageData = banner['banner-image'];\r\n\r\n    return `https://${imageData.defaultHost}/i/${imageData.endpoint}/${imageData.name}`;\r\n  }\r\n\r\n  const { ratio } = deviceRatios[deviceType];\r\n  const deviceWidth = 812 * ratio;\r\n  const deviceHeight = 812;\r\n\r\n  let scale = 1;\r\n  // const toolbarHeight = 134;\r\n  const availableHeight = windowHeight - 50;\r\n  if (deviceHeight > availableHeight) {\r\n    scale = availableHeight / deviceHeight;\r\n    if (scale < 0.7) {\r\n      scale = 0.7;\r\n    }\r\n  }\r\n\r\n  return <div>\r\n    {banners.map((banner, index, banners) => {\r\n      return <>\r\n          { index != 0 && banners[index-1].isFeatured && <br/>}\r\n          <img\r\n          src={getBannerImage(banner)}\r\n          alt={banner['banner-image'].id}\r\n          style={{\r\n            width: banner.isFeatured ? deviceWidth : deviceWidth / 2,\r\n            padding: 0\r\n          }} />\r\n        </>\r\n    })}\r\n  </div>\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}